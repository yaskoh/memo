* VBA
** Language
- [[https://msdn.microsoft.com/en-us/library/office/gg264383.aspx][Visual Basic for Applications language reference for Office 2013 - Dev Center]]

** Applications
*** Excel
**** About
***** Object Model
- 
  主なものは、Application、Workbook、Worksheet、Range。
  
**** Statement
- [[http://officetanaka.net/excel/vba/statement/index.htm][VBAのステートメント - officeTANAKA]]

***** Call
- 
  他のSubプロシージャやFunctionプロシージャなどを呼び出して制御を渡す。

  下記にプロシージャに関して、幾つかの使用規則を記す。
  1. 通常のSubプロシージャは、Callステートメントを省略することも可能。
     ex) ○:Call myFunction(123)
         ○:myFunction 123
  2. Callを省略する場合、引数を括弧で囲まない。Callを使う場合は囲む。
     ex) ×:myFunction(123)
         ○:myFunction 123
         ○:Call myFunction(123)
         ×:Call myFunction 123
  3. Callでは返り値を受け取れない。
     ex) ×:rc = Call myFunction(123)
  4. 返り値を受け取る場合、Callを使わないが、括弧は必要となる。
     ex) ×:rc = myFunction 123
         ○:rc = myFunction(123)

***** Dim
- 
  変数を宣言する

***** End
- 
  プロシージャまたはブロックを終了する

***** For Each ... Next
- 
  コレクションや配列の各要素に対してstatementsを実行する。

***** For ... Next
- 
  引数startで指定した値から、引数endえ指定した値までstatementを繰り返す

***** Function
- 
  Functionプロシージャ（戻り値あり）を作成する

***** If ... Then ... Else
- 
  条件を評価して、条件付きの実行を行うステートメント

***** Private
- 
  プライベート変数を宣言する。プライベート変数は、宣言されたモジュール内のみ参照できる。

***** Sub
- 
  Subプロシージャを作成する。

***** With
- 
  
**** Functions / 関数
- [[http://officetanaka.net/excel/vba/function/index.htm][VBAの関数 - officeTANAKA]]

***** Mid
- 
  

***** StrConv
- 用法
  StrConv(string, conversion)

- conversion
  |--------------+----+----------------------------|
  | 定数         | 値 | 内容                       |
  |--------------+----+----------------------------|
  | vpUpperCase  |  1 | 大文字に変換               |
  | vbLowerCase  |  2 | 小文字に変換               |
  | vbProperCase |  3 | 各文字の先頭を大文字に変換 |
  | vbWide       |  4 | 半角文字を全角に変換       |
  | vbNarrow     |  8 | 全角文字を半角に変換       |
  |--------------+----+----------------------------|
  
- 
  "string"で指定した文字列に、conversionで指定した変換を行う。

**** Property
***** Format
***** Value
**** Object
- [[http://www.vba-ie.net/object/index.html][ExcelのVBAで利用したオブジェクト一覧 - VBAのIE制御入門]]

***** Application
- 
  Excelアプリケーション全体を表す。

***** Workbook

***** Workbooks(Collection)

***** Worksheet

***** Worksheets(Collection)

***** Range

***** ByValとByRef
- 
  何もつけない場合、ByRef(参照渡し)として定義されている。
  値渡しをしたい場合は明示的にByVal、としなくてはならない。
  出来る限りつけておくのが良い。

***** subとfunction
- 
  functionは戻り値を返す。subはsubroutineの略で戻り値は返さない。

***** 複数の値をプロシージャに渡す
- 
  複数の値を引数として渡す場合は、以下のどちらかの対応が必要。
  - Callステートメントをつける
  - 括弧を除いて平文で渡す
  
  括弧は、引数の演算処理のためのものなので、複数引数には対応していない、とのこと。
  ちなみに以下は正常となる。
  ex) MsgBox ("お元気ですか？"+"これでよろしいですか？"), vbOKOnly
  - [[http://www.atmarkit.co.jp/ait/articles/1503/17/news039.html][コンパイルエラーにならない関数の使い方 - @IT]]
  
***** 代入
- 
  オブジェクトに値を代入するときは、Set A = B、という形で"Set"が必要。
  値であれば、A = Bとすると代入できる。

***** GUIDの作成
- 
  Mid$(CreateObject("Scriptlet.TypeLib").GUID, 2, 36)
  [[http://maeda0414.blog.fc2.com/blog-entry-26.html][Execl VBAでGUIDを作成する]]

*** Powerpoint
**** Object Model
- [[https://msdn.microsoft.com/ja-jp/library/ff743835.aspx][オブジェクトモデル (PowerPoint VBA リファレンス) - Developer Network]]

***** Application Object
- PowerPointアプリケーション全体。
  ActivePresentationやWindowsなどの、最上位レベルのオブジェクトを取得するプロパティや、
  アプリケーション全体に適用される設定やオプションが含まれる。
- PowerPointから実行されるコードを記述する場合、Applicationオブジェクトのプロパティである
  ActivePresentation, ActiveWindow, AddIns, Presentations, SlideShowWindows, およびWindowsは修飾子なしで使用可能。
  
****** Properties
******* ActivePresentation
- 作業中のウィンドウで開かれているプレゼンテーションを表すPresentationオブジェクトを取得する。
- 例
  - Application.ApctivePresentation.SaveAs MyPath
    "MyPath"に示されたパス・ファイル名で現在のプレゼンテーションを保存する。

******* ActiveWindow
- 作業中のスライドウィンドウを表すDocumentWindowオブジェクトを取得する。取得のみ可能。
  
******* Presentations Property
- 開いているすべてのプレゼンテーションを表すPresentationsコレクションを取得する。
  値の取得のみ可能。

- 構文
  式.Presentations
  戻り値 : Presentations

****** Methods
***** DocumentWindow Object
- ドキュメントウィンドウを返す。DocumentWindowsコレクションのメンバ。
  すべての開いているドキュメントウィンドウが含まれる。

- 現在実行中のプレゼンテーションはPresentationプロパティを使用する。
  選択内容を取得するにはSelectionプロパティを使用する。
  指定したウィンドウの表示モードを取得するにはViewプロパティを取得する。

****** Properties
******* Selection
******* View
- 表示モードを表すViewオブジェクトを取得する。
***** Presentation Object
- プレゼンテーションを表す。
  Presentationsコレクションのメンバ。
- 例
  - Presentatons("Sample Presentation").Slides.Add 1,1
    ファイル名"Sample Presentation"の先頭にスライドを追加する。
  - ActivePresentation.Save
    作業中のプレゼンテーションを保存する。
***** Presentations Object
- Presentationオブジェクトのコレクション。
  Presentaniosコレクションを取得するには、Presentationsプロパティを使用する。
***** Shapes Object
- 指定したスライドのすべてのShapeオブジェクトのコレクション。
****** Methods
******* Paste
- 構文
  式.Paste
  戻り値 : ShapeRange
***** Slide Object
- スライドを表す。Slidesコレクションには、プレゼンテーションのすべてのSlideオブジェクトが含まれる。
****** Properties
****** Methods
******* MoveTo Method
- 指定したオブジェクトを同じコレクション内の場所に移動し、他のアイテムの番号を振りなおす。
- 構文
  式.MoveTo(toPos)
- ToPos : 移動先のインデックス位置。
- 例
  - ActivePresentation.Slides(2).MoveTo toPos:=1
    スライド2をスライド1へ移動する。

***** Slides Object
***** View Object
- 指定したスライドウィンドウの現在編集中の表示モードを表す。
****** Methods
******* GotoSlide
- 指定したスライドに切り替える。
- 構文
  式.GotoSlide(Index)
**** Memo
***** スライド番号を指定してジャンプ
- ActiveWindow.View.GotoSlide Index:=Int(2)
- SlideShowWindows(1).View.GotoSlide 3
  http://www.relief.jp/itnote/archives/powerpoint-vba-goto-slide.php

***** スライド数を取得
- ActivePresentation.Slides.Count

***** スライドを順番にループ
- For i = 1 To ActivePresentation.Slides.Count
      Operation
  Next

- For Each sld In ActivePresentation.Slieds
      Operation
  Next
- 
  http://okwave.jp/qa/q8684138.html

**** Link
- [[https://msdn.microsoft.com/ja-jp/library/ee861525.aspx][PowerPoint VBAリファレンス - Developer Network]]

*** Outlook
** Memo
