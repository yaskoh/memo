* COBOL

** 構成
*** 見出し部
- IDENTIFICATION DIVISION
  プログラム名やその作成者、作成日などのメンテナンス情報を記述する。
  なお、節(SECTION)は存在しない。

-内容
  プログラム名
  作成者名
  作成日
  etc

**** 段落
- PROGRAM-ID     : プログラム名
- AUTHOR         : プログラム作成者
- DATE-WRITTEN   : プログラム作成日
- DATE-COMPILED  : コンパイル日
- INSTLLATION    : インストール先
- SECURITY       : 機密事項

*** 環境部
- ENVIRONMENT DIVISION
  作成しようとしているプログラムを翻訳(コンパイル)するコンピュータ名や実行するコンピュータ名、
  環境変数の受け渡し情報やプログラムから読み書きするファイルの名前や種類などを定義する。
  コンピュータ名等は影響がないため省略されがちだが、ファイル管理段落は影響があるため、きちんと記述する必要あり。

- 内容
  使用する環境変数
  使用するファイル
  etc

**** 節と段落
- CONFIGURATION SECTION : 構成節
  - SOURCE-COMPUTER       : 翻訳するコンピュータ名
  - OBJECT-COMPUTER       : 実行するコンピュータ名
    etc
- INPUT-OUTPUT SECTION  : 入出力節
  - FILE-CONTROL          : ファイル管理

*** データ部
- DATA DIVISION
  入出力ファイルのレイアウト、データ項目（変数）、外部プログラムとのインターフェースなど、
  プログラムで扱う全てのデータを定義する。

- 内容
  データ項目（変数）の定義
  ファイルのレイアウト
  etc

**** 節
- FILE SECTION             : ファイル
- WORKING-STORAGE SECTION  : 作業場所
  プログラム上で使用する全ての変数定義を行う。
- LINKAGE SECTION          : 連絡
  外部プログラムとのやりとりに関する情報を定義する。
  C言語でいうmain関数の引数にあたる。
- COMMUNICATION SECTION    : 通信
- REPORT SECTION           : レポート

*** 手続き部
- PROCEDURE DIVISION
  プログラムが行う処理内容を記述する。
  規定の節や段落は存在せず、作成者が作成する。
  節がC言語の関数、段落がさらに小さな処理のまとまり。



** コーディング
*** コーディングフォーマット
- 1行は80文字以内で、5つの領域に分かれてコーディングをする。
**** 一連番号領域(0-6)
- 
  プログラムの行番号を6桁の数字で記述する。
  行番号は「000010」か「000100」からスタートし、
  1行ごとに10もしくは100ずつ可算していくのが一般的。
  ただし、最近のコンパイラは一連番号領域を無視するので、
  昇順でなかったりスペースで埋めてあっても問題ない。

**** 標識領域(7)
- 
  8行目以降に何が書かれているかを空白または記号で示す。
  |------+--------------------------------------|
  | 記号 | 内容                                 |
  |------+--------------------------------------|
  | 空白 | プログラムコードであることを示す。   |
  | *    | コメント行であることを示す。         |
  | /    | 印刷時に改ページ行であることを示す。 |
  | -    | 前行からの継続であることを示す       |
  |------+--------------------------------------|

**** A領域(8-11)
- 
  各部の開始宣言、節や段落の宣言、データ項目のレベル番号をこの領域の先頭から書き始める。

**** B領域(12-72)
- 
  手続き部の命令文や作業領域のレベル番号などを記述する。

**** 見出し領域(73-80)
- 
  翻訳対称外の領域で、プログラムの修正日や修正者名等のコメント的な記述をする。
*** コーディングルール
- ピリオド
  部、節、段落の宣言部、1つの命令文、命令ブロックの終了をピリオドで示す。
  命令ブロック内ではピリオドは不要。

- 行継続
  標識領域にハイフンを各課、または命令文の区切りに改行することで、
  2行以上にまたがった記述が可能。


** Link
- [[http://www12.ocn.ne.jp/~peg/index.html][OpenCOBOL Documenation Library]]
  
