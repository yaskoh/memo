* Docker

** commands
*** docker
- 
  show the full list of accepted arguments.

**** attach
- 
  Attach to a running container

**** export
- 
  Stream the contents of a container as a tar archive

**** commit
- 
  create a new image from a container's changes

- Usage
  docker commit [OPTIONS] CONTAINER [REPOSITORY [TAG]]

**** images
- 
  list images

- Usage

**** import
- 
  Create a new filesystem image from the contents of a tarball

**** inspect
- 
  return low-level information on a container

- Usage
  docker inspect CONTAINER|IMAGE [CONTAIR|IMAGE...]

**** load
- 
  Load an image from a tar archive on STDIN

- Usage
  docker load

- -i, --input=""
  Read from a tar archive file, instead of STDIN

**** logs
- 
  fetch the logs of a container
  looks inside the container and returns its standard output.

**** port
- 
  Lookup the public-facing port which is NAT-ed to PRIVATE_PORT

**** ps
- 
  show a list of all running containers

- -l
  show the ID of the machine you using

- -a
  show all containers including stopped ones.

- -q
  
**** pull
- 
  pull an image or a repository from the docker repository server

**** push
- 
  push an image or a repository to the Docker registry server

**** restart
- 
  Restart a running container

**** rm
- 
  Remove a conatiner

- 
  All conteners can be deleted by using command as "docker rm `docker ps -a -q`"

**** rmi
- 
  Remove an image

**** run
- 
  run a command in a new container.

  I usually use this command as "docker run -it image/images /bin/bash"

- -d, --detach=false
  detached mode: run container in the background and print new container ID
  tells Docker to run the container and put it in the background, to deamonize it.

- -i, --interactive=false
  keep STDiIN open even if not attached
  allows us to make an interactive connection by grabbing the standard in of the container.

- -p
  publish a container's port to the host
  format:  ip:hostPort:containerPont | ip::containerPort | hostPort:cantainerPort

- -t, --tty=false
  allocate a pseudo-tty
  assign a pseudo-tty or terminal inside container

- -v
  mount file or directory in the host to the container.
  -v /home/user/hostdir:/target/container

**** search
- 
  search for an image in the Docker index

**** save
- 
  save an image to a tar archive
- Usage
  docker save IMAGE
**** start
- 
  Start a stopped container

**** stop
- 
  stop a running container
  tells Docker to politely stop the running container.

**** version
- 
  show the Docker version information

*** unused

**** build
- 
  Build a container from a Dockerfile

**** diff
- 
  Inspect changes on a container's filesystem

**** history
- 
  Show the history of an image

**** info
- 
  Display system-wide information

**** insert
- 
  Insert a file in an image

**** kill
- 
  Kill a running container

**** login
- 
  Register or Login to the Docker registry server

**** tag
- 
  Tag an image into a repository

**** wait
- 
  Block until a container stops, then print its exit code

** network
*** Link
- [[http://deeeet.com/writing/2014/05/11/docker-network/][Dockerのネットワークの基礎 - SOTA]]

** memo
*** detach
- 
  press Ctr-p Ctr-q when you detach and leave a container.

** link
- [[http://www.techscore.com/blog/2014/08/05/introduction-to-docker/][隔離の技術Dockerの考え方と使い方の基本 - TECHSCORE BLOG]]
- [[http://yuuki.hatenablog.com/entry/docker-performance][Dockerは早いのか？Dockerのパフォーマンスについて重要なことは何か？ - ゆううきブログ]]
  
