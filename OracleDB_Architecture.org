* OracleDB Architecture
** 全体
*** Oracleソフトウェア
- ホスト・コンピュータ上にインストール
*** Oracleデータベース
- ディスク上の物理ファイルの集合
- 内容
  - データファイル
  - 制御ファイル
  - REDOログファイル
*** Oracleインスタンス
- メモリ構造:SGA
- プロセス構造:バックグラウンドプロセス
** Process
*** About
- 
  Oracleでは複数のプロセスが実行されている。
  またWindows上では、複数プロセスでなくマルチスレッドによる動作となる。
  
- 
  MTSと呼ばれる構成にしない限り、Oracleクライアント1つに対して、サーバープロセスが1つ対応する。

*** User Process(Client)
- SQL文を発行するツール、あるいはユーティリティ。
  SQL*Plus, Oracle Enterprise Managerなど。
*** Listener Process
- 
*** Server Process
- ユーザプロセスから受け取ったSQL文を、実際にOracleインスタンスと対話させ実行するプロセス。
  原則的には、SQLの結果を返すために必要なことを行う。

*** Background Process
- SGAとデータベースファイルとの同期や、整合性の保持などの役割。
  原則的には、SQLの結果を返すために必要なこと以外を行う。

**** PMON プロセス・モニター
- サーバ・プロセスの監視を行い、ユーザ・プロセス障害時にクリーンナップを行う（ロックの解放、ロールバックアンド）
- ora_pmon_XXXXXX(SID)
  ピーモン。プロセスを監視し、プロセス障害を見つけた場合に掃除する。
**** SMON システム・モニター
- インスタンス障害後、再起動の際に自動的にインスタンス・リカバリを行う
**** DBWn データベース・ライター
- データベース・バッファ・キャッシュ上で更新されたデータを定期的にデータ・ファイルに書き込む。
- ora_dbwX(0や1)_XXXXXX(SID)
  データベースライター。データをディスクに書く。
**** CKPT チェックポイント
**** LGWR ログ・ライター
- REDOログ・バッファ上のREDOログ・エントリを定期的にREDOログ・ファイルに書き込む（COMMIT時など）
- ora_lgwr_XXXXXX(SID)
  ログライター。ログをディスクに書く。
**** ARCn 
- ora_arcX(0や1)_XXXXXX(SID)
  アーカイバ。ログデータをアーカイブ（長期保存のため別ファイルとして保存）する。
** Memory
- [[https://docs.oracle.com/cd/E16338_01/server.112/b56306/memory.htm#i8451][14 メモリー・アーキテクチャ - Oracle® Database概要 11gリリース2 (11.2)]]
*** Cache
- 
  どのプロセスからも見ることができるメモリをキャッシュとしている。
  OSの共有メモリの機能を使っている。

**** Buffer Cache
- 
  書き込み用データもキャッシュに保存される。
  DBWRが定期的に変更済みデータをディスクに保存している。
  
- 
  フルスキャンデータはキャッシュヒットする可能性も少なく、他のデータも追い出してしまうため、
  Oracleでは大きな表であればバッファキャッシュに長時間留めないようにする。
  そのため、一般にフルスキャンしたデータはバッファキャッシュに載っていない、と考える。

*** PGA
- Program Global Area
  共有でないメモリの一部。サーバー・プロセス（およびバックグラウンドプロセス）に対する専用の作業領域。
  ソート処理やハッシュ結合などで使われる。
**** 内容
- セッション情報
  セッションに対するユーザの権限に関する情報
- カーソル状態
  セッションで使用している様々なカーソルの処理段階を示す
- スタック空間
  セッション変数が入っている空間
- ソート領域
  データのソートに使用
*** SGA
- System Global Area
  共有領域。
  便利だが競合が起こるため、ロックによる排他制御が必要で、性能トラブル等が起きやすい原因となっている。
**** 共有プール
- SQLキャッシュとしての役割。実行するSQLと同じSQLが共有プール上にある場合、解析をスキップできる。
  実行計画、データディクショナリのデータが格納される。
**** データベース・バッファ・キャッシュ
- データキャッシュとしての役割。
  SQL文の実行に必要なデータがデータベース・バッファ・キャッシュにあれば、メモリアクセス、なければディスクアクセスとなる。
  データブロックが格納される。
**** REDOログ・バッファ
- データベースに対して行われたあらゆる更新履歴を持つ。これを「REDOログエントリ（変更履歴）」と呼ぶ。
  障害時にリカバリとして使われるデータ。
  REDOログが格納される。
**** Javaプール
- オプション
**** ラージ・プール
- オプション
**** Streamsプール
*** UGA : User Global Area
*** Software Code Area

** Files
*** データファイル Data File
- ユーザーが利用するデータ（表など）を格納
*** 制御ファイル Control File
- データベースの制御情報・構造に関する情報を格納
- 内容
  - データベース情報
    データベース名、識別子
  - データ・ファイル情報
    表領域と対応するデータ・ファイルの名前と場所、現在の状態等
  - REDOログ・ファイル情報
    REDOログ・ファイル及びデータ・ファイルの名前と場所、およびステータス
  - その他
    チェックポイント情報（メモリ上の情報をいつ、どこまでファイルに反映したか等）
    バックアップ情報
**** 関連コマンド
- configure control file autobackup on;
  構成変更が行われる度に、制御ファイルの自動バックアップが取得される。

*** REDOログファイル REDO Log File
- データベースへの変更情報・履歴(DML,DDL等)を格納
- 雑記
  - 書き込みタイミング
    - COMMIT時
    - REDOログ・バッファが一杯になった時
    - データベース・ライターが書き込む時
    など
  - 障害時の復旧に使用
  - ファイルは循環運用される
*** その他
**** 初期化パラメータ・ファイル
- Oracleインスタンスの構成（メモリ、プロセスなど）を記述したファイル。
  起動時(NOMOUNTの時点、最初)に読み込まれる。
  $ORACLE_HOME/dbs配下に存在している。
  PFILEは"initSID.ora", SPFILEは"spfileSID.ora"

  制御ファイルのパスやアーカイブログなどのその他ファイルパス、各種パラメータが書かれている。
**** アーカイブ・ログ・ファイル
- 一杯になったREDOログ・ファイルのオフライン・コピー
  REDOログ・ファイルの変更履歴を永続的に格納し、リカバリに使用する場合に必要。
  - REDOログ・ファイルは循環運用されるため、古いものは上書きされる。
    昔のものをアーカイブして、復旧できるようにする。
  - ARCHIVELOGモードで稼働している場合に作成される。

***** 関連コマンド
- ARCHIVE LOG LIST
  アーカイブログのステータスを確認する
- SELECT LOG_MODE FROM V$DATABASE;
- ALTER DATABASE ARHCIVELOG;
  アーカイブログモードへ移行する
- ALETR DATABASE ARCHIVELOG MANUAL;
  手動アーカイブモードとなる
- ALTER DATABASE NOARCHIVELOG;
  ノーアーカイブログモードに変更
****** Obsolete
- ALTER SYSTEM ARCHIVE LOG {START|STOP};
  (10gで廃止)
**** アラート・ログ・ファイル
- 様々な情報
  - 内部エラー
  - データベースの起動と停止、表領域の追加、削除などの管理作業
  - 起動時の初期化パラメータ
**** トレース・ログ・ファイル
**** バックアップ・ファイル
*** 各種プログラム
- オラクルのプログラムは「oracle」という名前のファイルで、$ORACLE_HOME/binに存在。
  その他sqlplusなどのプログラムも同フォルダ上に存在している。
** Logical Storage
*** 表領域
**** 種類
***** SYSTEM表領域
- 
  SYSTEMという表領域。データベース作成時に自動的に作成される。
  データベースのオープン中は常にオンラインになっている。

****** データ・ディクショナリ
- 
  SYSTEM表領域にはデータ・ディクショナリ表が必ず含まれる。
  データファイル1に格納される。

****** PL/SQLプログラムユニット
- 
  ストアドPL/SQLプログラム・ユニットのために格納されるデータは、すべてSYSTEM表領域にある。

***** SYSAUX表領域
- 
  SYSTEM表領域の補助表領域。
  多数のデータベース・コンポーネントで、デフォルトのデータ格納場所としてSYSAUX表領域が使用される。
  そのため、データベースの作成時またはアップグレード時に必ずSYSAUX表領域が作成される。
  SYSTEM表領域に常駐しないデータベース・メタデータの集中格納場所となる。

***** UNDO表領域
- 
  ロールバック情報の格納にのみ使用する特別な表領域。

***** ローカル管理表領域
- 
  表領域によるエクステント管理。
  各データファイルのビットマップが保持され、ビットマップを使用して、使用済領域と空き領域が追跡される。
  Oracle8iより提供。デフォルト。
  EXTENT MANAGEMENT句にLOCALを指定する。

- Extent Management
  AUTOALLOCATE, UNIFORMが選択可能。
  AUTOALLOCATEがデフォルト。UNIFORMを指定して均一エクステントによる管理も可能。
  さまざまなサイズのオブジェクトが表領域に含まれ、異なるサイズの多数のエクステントが必要と予測される場合、AUTOALLOCATEを選択する。
  エクステントの数とサイズが正確に予測できる場合はUNIFORMを選択する。SIZEを指定しない場合はデフォルトで1MBとなる。

***** ディクショナリ管理表領域
- 
  データ・ディクショナリによる表領域管理。
  領域の使用率の追跡をSQLディクショナリ表に依存する従来の方法で管理する表領域。
- 
  10gからシステム領域を含みすべての領域に対してローカル表領域がデフォルトとなっている。
  システム表領域をローカル管理領域で作成するとディクショナリ管理表領域は作成できなくなるため、
  10g以降は通常のデータベース作成ではディクショナリ管理表領域は作成できない。

***** 一時表領域(TEMP)
- 
  Oracle7.3より提供された表領域の種類。
  セッションの間のみ存続する一時データが格納される。
  中間ソート結果、一時表と一時索引、一時LOB、一時Bツリーを格納するために使用する。
  一時表領域が明示的に割り当てられていないユーザは、デフォルト一時表領域（新規インストールではTEMP）を使用する。
  
***** bigfile表領域
- 
  単一で非常に大きいデータファイル（最大40億ブロック）を持つ可能性がある表領域。
  従来のsmallfile表領域は複数のデータファイルを格納できるが、各データファイルは大きくない。

***** USERS表領域
- ユーザー表用に用意されているデフォルト表領域
**** 備考
- 表の論理的な格納先
- 物理的には1つ以上のデータファイルに格納される
  
*** セグメント
*** エクステント
*** Oracleデータ・ブロック
**** PCTFREE
- 既存の行を更新する場合に備えて、空き領域として確保される割合の最小値。
  "20"と設定した場合、挿入に対して80%使用可能で、20%は更新のために保持される。
**** PCTUSED
- 新しい行をブロックに追加するときに、行データとオーバーヘッドに使用できるブロックの割合の最小値。
  PCTFREEで指定した限界値までブロックが満たされると、その割合がPCTUSEDの値を下回るまで、そのブロックを新しい行の挿入に使用できない。
**** Block
- 
  データを管理する単位。
  I/Oの単位やバッファキャッシュはブロック単位で管理されている。
  OSのブロックとは異なり、Oracle独自のブロック。
  
  ブロックサイズは2KB, 4KB, 8KB, 16KB, 32KBといったサイズから選べる。

***** 構造
- ブロックヘッダ
  管理用の領域。データの先頭部分に格納される。
- データ
  ブロックの後ろから順に格納する。
  DELETEにより空いた領域を詰めなおすことはしない。
  
** Optimizer
*** Cost Base
- 
  処理時間やI/O回数が最小になると考えられる処理を最上するアルゴリズム。
  コストとは、処理に必要と思われる時間、もしくはリソース使用量のこと。

**** Analyze
- 
  9i R2までは管理者が定期的、もしくは事前に行っておくことが推奨されていたが、
  10gからはOracleが自動的に行ってくれる。

- 統計情報
  - SQL文の情報
  - 表やインデックスの統計情報
  - パラメータの情報
  - システム統計情報
    - 1作業あたりにかかる時間の目安
    - oracle 10gからのデフォルト情報。
    - CPUのクロック、
*** Rule Base
- 
  10g以降はサポートしていない。

** Status
*** OPEN
- 稼働状態。
  データファイルのチェックなどが済み、実際に動作できる状態。
  
*** MOUNT
- コントロールファイルを読み込んだ状態。データファイルなどにアクセスできる状態。
  各種ファイルの場所は知っているが、この段階では実際に各種ファイルにアクセスしないため、
  読み込み先ファイルが存在しなかったり、問題のあるファイルであってもエラーは出ない。
- OPEN : データファイルのチェックなどをする
  alter database open
  データファイルを開いて簡単にチェックをしたり、一部のバックグラウンドプロセスを起動したりしている。

*** NOMOUNT
- バックグラウンドプロセスと共有メモリが存在する状態。インスタンスが起動した状態。
  パラメータファイルを読み込んだ状態（パラメータファイルは主要なDBファイルではない）。
- MOUNT : 制御ファイルを読み込む
  alter database mount
  初期化パラメータに記述されている制御ファイルのパスを使用して、制御ファイルを開いて中身を読む。
  REDOログファイルやデータファイルの位置を把握する。
  なお、場所を知るだけなのでファイルが無くてもこの時点ではエラーにならない。

*** SHUTDOWN
- 停止状態。
- NOMOUNT : パラメータを読み込み、バックグラウンドプロセスの起動や共有メモリを確保する
  startup (nomount)

** Link
- [[http://www.oracle.com/technetwork/jp/ondemand/db-basic/0420-1330-oracle-architecture-366291-ja.pdf][今さら聞けない!?Oracle入門 ～アーキテクチャ編～]]
- [[http://onefact.jp/wp/2014/08/29/oracle%E3%82%A2%E3%83%BC%E3%82%AD%E3%83%86%E3%82%AF%E3%83%81%E3%83%A3%E3%82%92%E3%81%A9%E3%81%AE%E3%82%88%E3%81%86%E3%81%AB%E7%90%86%E8%A7%A3%E3%81%99%E3%82%8B%E3%81%8B/][Oracleアーキテクチャをどのように理解するか - サイクル＆オラクル]]
- [[http://www.atmarkit.co.jp/ait/articles/1010/29/news127.html][Oracleデータベースアーキテクチャを復習する - 独学！ ORACLE MASTER Gold 11g講座（1） - @IT]]
- [[https://enterprisezine.jp/iti/detail/29][SQLの実行と排他制御からDBの内部動作を知る - DB Magazineスぺシャル]]
