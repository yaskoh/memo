* Tools
- Temporary use. Locate what not being categorised other files. 
  Transfer to somewhere else if each tools collecting enough volumes.

** Programming Language
*** elm
- 
  関数型のフロントエンドのための言語。
  html, css, javascriptに変換される。
  
- 
  [[http://doloopwhile.hatenablog.com/entry/2014/12/01/200000][Elmとはどんな言語か？その７つの特徴【Elmアドベントカレンダー2014 1日目】 - None is None is None]]

** Parser Generator
*** yakk/bison
- 
  [[file:./Compiler.org][Compiler.org]]

** Parser
*** SintyaxNet
- 
  neural models of syntax.

- 
  http://googleresearch.blogspot.tw/2016/05/announcing-syntaxnet-worlds-most.html?m=1
  https://github.com/tensorflow/models/tree/master/syntaxnet

** Lexical Analyzer
*** lex/flex
- 
  [[file:./Compiler.org][Compiler.org]]

** Shell
*** GNU Readline
- キーバインドを設定する。
  デフォルト設定ファイルは~/.inputrc。
** File
*** Samba
- Unix系OSでWindowsのファイル共有機能を提供するもの。
- [[https://www.samba.org/][SAMBA]]
- [[https://wiki.samba.org/index.php/Main_Page][Main Page - SAMBA wiki]]
** Database
*** HeidiSQL
- http://celtislab.net/archives/20130826/heidisql%E3%81%A7mysql%E3%83%87%E3%83%BC%E3%82%BF%E3%83%99%E3%83%BC%E3%82%B9%E3%81%B8%E6%8E%A5%E7%B6%9A%E3%81%97%E3%81%A6%E3%81%BF%E3%82%8B/

*** MySQL Workbench
- https://www-jp.mysql.com/products/workbench/

** WebServer
*** Architecture
**** シリアルモデル
**** マルチプロセスモデル
**** マルチスレッドモデル
**** イベント駆動モデル
**** ハイブリッドモデル
**** 計量プロセスモデル
**** Link
- [[http://yuuki.hatenablog.com/entry/2015-webserver-architecture][2015年Webサーバアーキテクチャ序論 - ゆううきブログ]]

*** Apache
**** 特徴
***** 複数バージョンのサポート
***** MPM : Multi Processing Module
- 
  複数OSに最適化

****** プロセスの挙動(Unix)
******* prefork
- 
  スレッドを使わず、先行してforkを行うウェブサーバ。
  伝統的に親プロセスを1つ持ち、クライアントからリクエストが来るとforkする。実際の通信は子プロセスが受け持つ。
  そのため、接続数だけ子プロセスが起動する。
  forkに時間がかかるため、あらかじめ複数個のプロセスを事前に立ち上げておくため、preforkと呼ばれる。

- メリット
  ある子プロセスがフリーズしても、他のプロセスには影響せず、安定した通信が可能。

- デメリット
  クライアントが多くなるほどメモリやCPU負荷が増えていく。

******* worker
- 
  マルチスレッドとマルチプロセスのハイブリッド型。
  子プロセス1つ1つがマルチスレッドで動作し、スレッド1つが1つのクライアントを受け持つ。

******* event
- 
  workerの一種で、マルチスレッドで動作する。
  違いはKeep-Aliveの処理方法で、Keep-Aliveの処理を別のスレッドに割り振って通信を処理する。
  2.4.1で正式に採用された。

***** モジュールによる機能追加
- 
  モジュールを追加することで拡張可能。(Apache->A patch)
  「Core」がまずあり、モジュールを追加して機能を拡張する。「mod_XXX」と名付けられる。
  
  追加は「静的リンク」と「動的リンク」がある。
  - 静的リンク
    静的リンクはApacheの実行ファイルそのものにモジュールを組み込む。バイナリ的に一体化する。
    早いが再コンパイルが必要。
  - DSO : Dynamic Shared Object、動的共有オブジェクト
    動的リンクはモジュールを別ファイルとして作成し、必要に応じてモジュールのファイルから機能を呼び出す方式。
    あらかじめ「mod_so」モジュールを静的リンクしておく必要がある。
    負荷が高くなるが導入が容易。

**** Build
- http://httpd.apache.org/docs/2.4/install.html
***** Download
***** Expansion
***** Setting
- 
  Defaultのパスは/usr/local/apache2

- [[http://httpd.apache.org/docs/2.4/programs/configure.html][configure - Configure the source tree - Apache HTTP Server]]
***** Compile
***** Install
***** Customize
***** Test
**** Modules
***** core
- 
  [[http://httpd.apache.org/docs/2.4/mod/core.html][Apache コア機能]]

****** <Directory>

****** <Location>

****** <VirtualHost>
****** Include
- Include file-path|directory-path
  - 設定ファイルをインクルードできる。
  - fnmatchのワイルドカード文字の利用が可能。
  - ファイルは絶対パスかServerRootディレクトリからの相対パス。
- ex)
  Include /usr/local/apache2/conf/ssl.conf
  Include conf/ssl.conf
***** MPM
- Multi Prosessing Module

****** About
- 
  |---------+------------------------|
  | Netware | mpm_netware            |
  | OS/2    | mpmt_os2               |
  | Unix    | prefork, worker, event |
  | Windows | mpm_winnt              |
  |---------+------------------------|
****** prefork
****** worker
- 
  マルチスレッドとマルチプロセスのハイブリッド型

****** event
****** mpm_winnt
****** mpm_netware
****** mpm_os2
***** Etc1
****** mod_rewrite
- 
  Provides a rule-based rewriting engine to rewrite requested URLs on the fly.
- 
  Apache Webサーバにおいて、クライアントからリクエストのあったURLの内部書き換えや、
  さまざまな環境変数等に応じたリダイレクトを可能とするモジュール。
  正規表現を使用したマッチングを行うことができる。

- 使用方法
  - httpd.confに設定する
    こちらの方が

  - .htaccessに設定する
    処理が遅くなるので、httpd.conf推奨。

***** Etc2
****** mod_jk
- 
  Tomcat redirector module.
- 
  https://tomcat.apache.org/connectors-doc/webserver_howto/apache.html
***** link
- http://httpd.apache.org/docs/2.4/mod/
**** Settings
***** httpd.conf
****** TypesConfig
- mimeタイプと拡張子の組み合わせを設定するファイルパスの指定
  デファルトで設定されたファイル名はmime.types
****** AddType
- MIMEタイプを追加する。
  例 : AddType MIMEタイプ 拡張子
****** CustomLog
- ログファイルの位置を設定する。
  例 : CustomLog ログファイルの場所 ログファイルのフォーマット
  
***** .htaccess
- this files provide a way to make configuration changes on a per-directory basis.
***** mime.types
- MIMEタイプと拡張子の組み合わせを設定する。
  httpd.confファイル中の"TypesConfig"でパスを設定している。
  httpd.confファイル内で、AddTypeを行いMIMEタイプを追加することも可能。
**** Command
***** httpd
****** -k
******* install
******* uninstall
******* start
******* stop
******* restart
**** Structure
***** htdocs
- 
  default Apache web server document directory
***** conf
- 
  the directory where all server configuration files are located.

***** logs
- 
  the directory where servere logs are kept, and includes Apache access logs and error logs.
  
***** cgi-bin
- 
  the directory where CGI scripts are kept.

**** Link
- [[http://httpd.apache.org/][Apache HTTP SERVER PROJECT]]

*** nginx
- [[file:Nginx.org][Nginx.org]]
*** IIS
- Windows
*** Built-in Web Server
- for PHP
- ex) >$ php -S localhost:8000
*** webrick
- ruby products
*** for Dev
**** Web Server for Chrome
- Chore Apps
**** 04WebServer
- Windows application
*** DIY
- [[http://kmaebashi.com/programmer/webserver/index.html][本当の基礎からのWebアプリケーション入門 -Webサーバを作ってみよう-]]
** Reverse Proxy Server
*** Squid
*** Varnish Cache
*** Apache Traffic Server, ATS
** Load Balancer
*** Kind
**** NAT
- 
  パケットがすべてロードバランサを経由する

**** DSR, Direct Server Return
- 
  復路がロードバランサを経由しない

*** Linux Virtual Server, LVS
- 
  Linuxをロードバランサとして利用するためのソフトウェア。
  Linuxカーネルに組み込んで使うカーネルモジュールと、設定や管理を行うipvsadmコマンドから構成されている。

*** HAProxy
- 
  http://www.haproxy.org/

*** Elastic Load Balancing, ELB
- 
  https://aws.amazon.com/jp/elasticloadbalancing/

** Monitoring
*** Zabbix
*** Nagios
*** Hinemos
- NTTData
  複数のコンピュータを単一のコンピュータのイメージで運用管理することを実現するオープンソースソフトウェア。
*** JP1
- Hitachi
*** WebSAM
- NEC
*** OpenView
- hp
*** Keepalived
- 
  routing software written in C.
  The main goal of this project is to provide smple and robust facilities for loadbalancing and high-availability to Linux system and Linux based infrastructures.

- 
  サービスの稼働状態を監視するソフトウェア。
  LVSと合わせて利用し、サーバが停止・LBが停止していたら、他へ振り分けることを行う。

- 
  http://www.keepalived.org/

*** Pacemaker
- HAクラスタソフト。
  以前は「Heartbeat」といった。
  複数のコンピュータをNW等で連携し、故障を検知したら他のコンピュータにフェイルオーバさせるなどし、高可用性を実現する。

**** 機能
***** アプリケーション監視・制御機能
***** ネットワーク監視・制御機能
***** ノード監視機能
***** 自己監視機能
***** ディスク監視・制御機能

**** Link
- [[http://linux-ha.osdn.jp/wp/manual/pacemaker_outline][Pacemakerの概要 - LINUX-HA JAPAN]]
*** Heartbeat
- 
  The High Availability Linux Projectが開発したもので、アクティブ・スタンバイクラスタを提供する基本的な機能を提供する。

- 機能
  - フェールオーバーとフェールバック
  - 稼働監視
  - 共有リソース管理
  - サービス監視

- 
  http://linux-ha.org/wiki/Heartbeat

** BigData
*** BigQuery
- 
  ビッグデータの分析に使われるcloudサービス。

** Browser
*** Firefox
**** XUL
- XML User Interface Language, ずーる
  Mozilaアプリケーションを作成するためのユーザインターフェースマークアップ言語。

*** Chrome

** Web Tools
*** Google Analytics
**** Link
- [[https://www.google.com/intl/ja_jp/analytics/][Google Analytics]]
- [[https://developers.google.com/analytics/][Googleアナリティクス]]
- [[https://liginc.co.jp/web/seo/107795][Googleアナリティクスの用語の意味と基本的な使い方をおさえよう - LIG INC.]]
** Network
*** Apache Thrift
- Facebookに開発されたRPCフレームワーク。
  C++, C#, Java, Perl, Python, PHP, Erlang, Rubyなどの言語観でシームレスに動作するサービス開発を可能とする。
**** Link
- [[https://thrift.apache.org/][Apache Thrift]]
*** Apache ZooKeeper
- 設定情報の集中管理や名前付けなどのサービスを提供するソフトウェア。
  分散システムの
**** Link
- [[https://zookeeper.apache.org/][Apache ZooKeeper]]
** CI
*** Jenkins
*** TravisCI
*** CircleCI
*** Wercker

** Project
*** Redmine
*** Trac
*** JIRA
** Testing
*** JUnit
- [[file:UnitTest.org][UnitTest.org]]
** Memory
*** valgrid
- programming tool for memory debuging, memory leak detection, and profiling.
  http://valgrind.org/
  https://en.wikipedia.org/wiki/Valgrind
*** memcached
- 
  a general-purpose distributed memory caching system.
  汎用の分散型メモリキャッシュシステム。

*** Oracle Coherence
- 
  インメモリ・データグリッド製品
  実体はJavaクラスライブラリ(100% Pure Java)
  ライブラリはJava/C++/.NET
** Log
*** Fluentd
*** Elasticsearch
*** Kibana
- 
  Elastic社のログ解析/可視化ツール。
  基本的にElasticsearchとセットで使われる。

** Chat
*** idobata
*** Slack
** Package Management
*** OSX
**** brew
**** MacPorts
- [[https://www.macports.org/][The MacPorts Project Official Homepage]]
**** Fink

** C
** Java
- 
  [[file:./Java.org][Java.org-Tools]]

** Ruby
*** Library
**** Rack
- 
  WSGIに影響されて開発された、Rubyにおけるサーバとアプリケーション／フレームワーク間のインターフェースの役割を果たすライブラリ。

- 
  [[http://gihyo.jp/dev/serial/01/ruby/0023][第23回 Rackとは何か（1）Rackの生まれた背景 - Ruby Freaks Lounge - gihyo.jp]]

*** Web Server
**** Unicorn
- Rack Web Srever.
  RackとWebサーバーの機能を併せ持つ。

- 
  Unicorn+Railsで公開も可能だが、レスポンスがApacheやNginxに劣るため、Nginx+Unicorn+Railsでの公開が一般的。
  ちなみにNginxはRailsの機能をサポートしていないため、Nginx+Railsでは動作しない。

**** WEBrick
- 汎用HTTPサーバフレームワーク
  単純なHTTP Webサーバの機能を提供するRubyのライブラリ。
  
**** Mongrel

**** Thin
**** Passenger
** Python
*** Library
**** WSGI
- Web Server Gateway Interface
  PythonのためのWebサーバとWebアプリケーション・フレームワーク間の標準インターフェースを定める仕様。

- 
  フレームワークの実装が特定のWebサーバに依存していることが多く、フレームワークかサーバが制限される場合が多くあった。
  そのため、お互いに複数の環境に対応するため
  
- 他言語への影響
  - PSGI(Perl)
  - Rack(Ruby)
  - SCGI
  - Ring(Clojure)
  - WAI(Haskell)

*** Web Application Framework

**** Django

**** Flask
**** Pyramid
**** Tornado
- 
  Facebook製。

**** CherryPy

**** Bottle
**** Zope

**** Twisted

**** TurboGears
** Perl
*** Web Server
**** Starlet
**** Starman
**** Monoceros
** PHP
*** Library
**** PSGI
- PHP版WSGI
** XML
*** Apache Xerces
- アパッチ ザーシーズ
  XML文書のパースと操作を行うための一群のソフトウェアパッケージ。
** Posix互換
*** Cygwin
- 
  互換性レイヤーなしでバイナリを作ることをサポートしていない、とのこと。
  Red Hatの従業員が一部開発に従事しているらしい。

*** Msys2
- 
  mingwビルドチームのAlexey Pavlovによって始められたプロジェクトで、最新のCygwinをきちんと追跡している。
  パッケージ管理ソフトのPacmanを移植している。

- 
  [[http://msys2.github.io/][MSYS2 installer]]
  [[http://verifiedby.me/adiary/055][MSYS2を試してみる - kashiの日記]]
  [[http://yaritakunai.hatenablog.com/entry/2015/11/07/201000][Windows上で動く最新のUnix環境、MSYS2について改めてまとめた - できないことはやりたくない]]
  [[http://amekujira.seesaa.net/article/420665358.html][MSYS、MSYS2、Cygwin、msysgitの違い - 雨鯨のたそがれ]]

*** MSYS
- Minimal System
  メンテナンスが追い付いていない模様

*** MinGW
- Minimalist GNU for Windows
  GNUツールチェーンのWindows移植版。

** Graphics editor
*** Drawing / Vector
**** Inkscape
**** Adobe Illustrator
**** LibreOffice Draw
*** Paint / Raster
**** GIMP
***** Menu
****** File(F)
****** Edit(E)
****** Select(S)
****** Image(I)
****** Layer(L)
****** Color(C)
****** Tool(T)
****** Filter(R)
****** Window(W)
******* ツールボックス/新しいツールボックス(Ctrl+B)
******* ドッキング可能なダイアログ(D)
******** Layer レイヤー(L)
- レイヤーウィンドウを表示する
****** Help(H)
***** Link
- [[http://www.geocities.jp/gimpfile/gum_jp/guide.html][GIMPユーザーズマニュアル日本語版]]
**** Adobe Photoshop
**** CLIP STUDIO PAINT
** Chart 図説
*** draw.io
- https://www.draw.io/
*** Cacoo
*** Gliffy
*** mermaid.js
- Library
** Undefined
** Glossary
- 
  現状は、行き場のないTempなもの。
  Toolsとは直接関係ない。

*** グリッド・コンピューティング
- 
  インターネットなどの広域のネットワーク上にある計算資源を結びつけ、
  ひとつの複合したコンピュータシステムとしてサービスを提供する仕組み。

** Memo

