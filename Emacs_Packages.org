* Emacs Packages
** System Packages
- 24.5時点
  - /emacs/share/emacs/24.5/lisp(win)
*** C source code
- [[file:Emacs_Packages_Builtin.org][Emacs_Packages_Builtin.org]]
*** emacs-lisp(dir)
**** advice
- 再定義なしに挙動を変更する。
  24.4以降ではnadvice.elを使う。

***** Functions
****** ad-activate
****** ad-activate-all
- (ad-activate-all &optional COMPILE)
  Activate all currently advised functions.
- すべての関数を活性化する
****** ad-activate-regexp
- (ad-activate-regexp REGEXP &optional COMPILE)
  Activate functions with an advice name containing a REGEXP match.
****** ad-deactivate
****** ad-deactivate-all
****** ad-disable-advice
****** ad-disable-regexp
****** ad-enable-advice
****** ad-enable-regexp
****** ad-start-advice
****** ad-stop-advice
****** ad-update
- (ad-update FUNCTION &optional COMPILE)
  Update the advised definition of FUNCTION if its advice is active.
****** ad-update-regexp
****** ad-unadvice
- (ad-unadvice FUNCTION)
  Deactivate FUNCTION and then remove all its advice information.
***** Macros
****** defadvice
- (defadvice FUNCTION ARGS &rest BODY)
  Define a piece of advice for FUNCTION (a symbol).
  
- (defadvice FUNCTION (CLASS NAME [POSITION] [ARGLIST] FLAG...)
    [DOCSTRING] [INTERACTIVE-FORM]
    BODY...)

  - FUNCTION ::= Name of the function to be advised.
  - CLASS ::= "before" | "around" | "after" | "activation" | "deactivation"
  - NAME ::= Non-nil symbol that names this piece of advice.
  - POSITION ::=  "first" | "last" | NUMBER.
  - ARGLIST
  - FLAG ::= "protect" | "disable" | "activate" | "compile" | "preactive"
  - DOCSTRING
  - INTERACTIVE-FORM
  - BODY

- Variables : 
  - ad-return-value :
    after, aroundの場合、この値に設定した値が戻り値となる。
  - ad-do-it :
    aroundの場合に元の関数を実行する場所を指定する。
    
**** byte-run
***** Functions
****** eval-when-compile
- (eval-when-compile &rest BODY)
  Like "progn", but evaluates the body at compile time if you're compiling.
***** Macros
****** defmacro
- (defmacro NAME ARGLIST &optional DOCSTRING DECL &rest BODY)
  Define NAME as a macro.
  When the macro is called, as in (NAME ARGS...),
  the function (labmda ARGLIST BODY...) is applied to the list ARGS...
  as it appears in the epxression,
  and the result should be a form to be evaluated instead of the original.
****** defun
- (defun NAME ARGLIST &optional DOCSTRING DECL &rest BODY... )
  Define NAME as function.
  
**** cl
***** Alias
****** loop
- (loop CLAUSE)
  alias for "cl-loop"
***** Functions
****** cl-loop
- (cl-loop CLAUSE...)
  The Common Lisp "loop" macro.
  
**** edebug
***** Alias
****** eval-defun
- (eval-defun EDEBUG-IT)
  alias for "edebu-eval-defun"

***** Functions
****** edebug
- (edebug &optional ARG-MODE &rest ARGS)
  Replacement for "debug".
****** edebug-eval-defun
- (edebug-eval-defun EDEBUG-IT)
  Evaluate the top-level form containing point, or after point.

**** lisp
***** Functions
****** backward-sexp (C-M-b, C-M-left)
- (backward-sexp &optional ARG)
  Move backward across one balanced expression (sexp).
****** forward-sexp (C-M-f, C-M-right)
- (forward-sexp &optional ARG)
  Move forward across one balanced expression (sexp).
**** lisp-mode
***** Functions
****** emacs-lisp-mode
- (emacs-lisp-mode)
  major mode for editing Lisp code ot run in Emacs.
****** eval-defun (C-M-x)
- (eval-defun EDEBUG-IT)
  Evaluate the top-level form containing point, or after point.
****** eval-print-last-sexp (C-j)
- (eval-print-last-sexp &optional EVAL-LAST-SEXP-ARG-INTERNAL)
  Evaluate sexp before point; print value into current buffer.
****** eval-last-sexp (C-x C-e)
- (eval-last-sexp EVAL-LAST-SEXP-ARG-INTERNAL)
  Evaluate sexp before point; print value in the echo area.
****** kill-sexp (C-M-k)
- (kill-sexp &optional ARG)
  Kill the sexp (balanced expression) following point.
****** lisp-interaction-mode
- (lisp-interaction-mode)
  Major mode for typing and evaluating Lisp forms.
**** nadvice
***** Functions
****** advice-add
- (advice-add SYMBOL WHERE FUNCTION &option PROPS)
  Like "add-function" but for the function named SYMBOL.
  Contrary to "add-function", this will properly handel tha cases 
  where SYMBOL is defeined as macro, alias, command, ...

- 引数に関数名、場所、アドバイス関数名を取る。

****** advice-remove
- (advice-remove SYMBOL FUNCTION)
  Like "remove-function" but for the function named SYMBOL.
  Contrary to "remove-function", this also works when SYMBOL is a macro
  or an autoload and it preserves "fboundp".

**** package
***** Functions
****** describe-package (C-h P)
- (describe-package PACKAGE)
  Display the full documentation of PACKAGE (a symbol)
  
****** list-packages
- (ilst-packages &option NO-FETTH)
  Display a list of packages.
- 用法
  1. インストールしたいパッケージの上で"i"を押す
  2. 選択し終わったら"x"を押す
****** package-initialize
- (package-initialize &optional NO-ACTIVATE)
  Load Emacs Lisp packages, and activate them.
  The variable "package-load-list" controles which packages to load.
****** package-install
- (package-install PKG)
  install the package PKG.
****** package-refresh-contents
- (package-refresh-contents)
  Download the ELPA archive description if needed.
***** Variables
****** package-load-list
- List of packages for "package-initialize" to load.
****** package-archives
- An alist of archives from which to fetch.
  The default value points to the GNU Emacs package repository.
***** Link
- [[http://emacs-jp.github.io/packages/package-management/package-el.html][package.el - Emacs JP]]

**** re-builder
***** re-builder
- (re-builder)
  Construct a regexp interactively.
***** reb-change-target-buffer (C-c C-b)
- (reb-change-target-buffer BUF)
  Change the target buffer and display it in the target window.
***** reb-quit (C-c C-q)
- (reb-quit)
  Quit the RE Bulider mode.
***** reb-copy (C-c C-w)
- Copy current RE into the kill ring for later insertion.
***** reb-change-syntax (C-c TAB)
- (reb-changne-syntax &optional SYNTAX)
  Changne the syntax used by the RE Bulider.

***** reb-toggle-case (C-c C-c)
***** reb-enter-subexp-mode (C-c C-e)
***** reb-prev-match (C-c C-r)
***** reb-next-match (C-c C-s)
***** reb-force-update (C-c C-u)
***** reb-copy (C-c C-w)
*** emmulation(dir)
**** cua-base
***** Functions
****** cua-set-mark / C-SPC, C-@
- (cua-set-mark &optional ARG)
  Set mark at where point is, clear mark, or jump to mark.
*** eshell(dir)
**** em-alias
***** Functions
***** Variables
****** eshell-command-aliases-list
- A list of command aliases currently defined by the user.
**** em-hist
***** Variables
****** eshell-hist-ignoredups
- If non-nil, don't add input matching the last on the input ring.
**** em-dirs
***** Functions
****** eshell/pwd
- (eshell/pwd &rest ARGS)
  Change output from "pwd" to be cleaner.
**** em-prompt
***** Variables
****** eshell-prompt-function
- A function that returns the Eshell prompt string.
****** eshell-prompt-regexp
- A regexp which fully matches your eshell prompt.
  it affects how eshell will interpret the lines that arpe passed to it.
*** international(dir)
**** mule-cmds
***** toggle-input-method (C-\)
- (toggle-input-method &optoinal ARG INTERACTIVE)
  Enable or disable multilingual text input method for the curret buffer.
***** set-language-environment LANGUAGE-NAME)
- (set-language-environment LANGUAGE-NAME)
  Set up multilingual environment for using LANGUAGE-NAME.
*** progmodes(dir)
**** cc-cmds
***** Functions
****** c-electric-delete
- (c-electric-delete ARG)
  Delets preceding or following character or whitespace.
*** url(dir)
**** url
***** Functions
****** url-retrieve-synchronously
- (url-retrieve-synchronously URL &optional SILENT INHIBIT-COOKIES)
  Retrieve URL synchronously.
*** compile
**** Functions
***** compile
- (compile COMMAND &optional COMINT)
  Compile the program including the current buffer.
***** compilation-window-height
- Number of lines in a compilation window.
  
*** custom
**** Functions
***** custom-set-variables
- (custom-set-variables &rest ARGS)
  Install user customizations of variable values specified in ARGS.
  These settings are registered as theme "user".
  The arguments should each be a list of the form :
    (SYMBOL EXP [NOW [REQUEST [COMMENT]]])
***** user-variable-p
- (user-variable-p VARIABLE)
  Return non-nil if VARIABLE is a customizable variable.
**** Macros
***** defcustom
- (defcustom SYMBOL STANDARD DOC &rest ARGS)
  Declare SYMBOL as a customizable variable.
  SYMBOL is the variable name.
  STANDARD is an expression specifying the variable's standard value.
  It is evaluated once by "defcustom", and the value is assigned to SYMBOL if the variable is unbound.
  
  This macro uses "devar" as a subroutine, which also marks the variable as "special",
  so that it is always dynamically bound even when "lexical-binding" is t.
  
  The remeining arguments should have the form [KEYWORD VALUE]...

- ARGS keywords
  - :type
    VALUE should be a widget type for editing the symbol's value
  - :options
  - :initialize
  - :set
  - :require
  - :set-after
  - :risky
  - :safe
  - :group
    VALUE should be a customization group.
    Add SYMBOL (or FACE with "defface") to that group.
  - :link
  - :version
  - :package-version
  - :tag
  - :load

- ユーザが編集可能な変数を宣言する。
***** defface
- (defface FACE SPEC DOC &rest ARGS)
  Declare FACE as a customizable face that defaultts to SPEC.
  FACE does not need to be quoted.
*** cus-edit
**** Variables
***** custom-file
- File used for storing customization information.
*** env
**** Functions
***** setenv
- (setenv VARIABLE &optional VALUE SUBSTITUTE-ENV-VARS)
  Set the value of the environment variable named VARIABLE to VALUE.
  
*** files
**** Functions
***** abbreviate-file-name
- (abbreviate-file-name FILENAME)
  Return a version of FILENAME shortened using "directory-abbrev-alist".
  This also substitutes "~" for the user's home directory and removes automounter prefixes.
***** basic-save-buffer
- (basic-save-buffer)
  Save the current buffer in its visited file, if it has been modified.
***** file-name-extension
- (file-name-extension FILENAME &optional PERIOD)
  Return FILENAME's final "extension".
***** file-name-sans-extension
- (file-name-sans-extension FILENAME)
  Return FILENAME sans final "extension"
***** find-file (C-x C-f)
- (find-file FILENAME &optional WILDCARDS)
  Edit file FILENAME.
***** load-file
- (load-file FILE)
  Load the Lisp file named FILE.
**** Variables
***** auto-mode-alist
- 
  Alist of filename patterns vs corresponding major mode functions.
  Each element looks like (REGEXP . FUNCTION) or (REGEXP FUNCTION NON-NIL).

***** backup-directory-alist
- Alist of filename patterns and backup directory names.
***** directory-abbrev-alist
- Alist of abbreviations for file directories.
  A list of elements of the form (FROM . TO), each meaning to replace FROM with TO when it appears in a directory name.
***** make-backup-files
- Non-nil means make a backup of a file the first time it is saved.
  This can be done by renaming the file or by copying.
***** visible-bell
- Non-nil means try to flash the frame to represent a bell.
***** write-file-hooks
- List of functions to be called before writing out a buffer to a file.
  
- ファイルを書き込む直前に呼び出されるフックを指定する。
*** frame
**** Functions
***** blink-cursor-mode
- (blink-cursor-mode &otoinal ARG)
  Toggle cursor blinking (Blink Cursor mode).
*** help
**** Functions
***** help
- (help)
  an alias for `help-for-help-internal`
***** describe-bindings (C-h b)
- 
  show key-bindings list

***** describe-key (C-h k key)
- 
  show key bindings that you will press

***** describe-key-briefly (C-h c key)
- 
  Print the name of the function KEY invokes.
***** describe-mode (C-h m)
- 
  現在のメジャーモードの説明

***** describe-function (C-h f)
- (describe-function FUNCTION)

***** describe-variable (C-h v)
- 
  Display the full documentation of VARIABLE (a symbol).
  Returns the documentation as a string, also.

***** help-with-tutorial (C-h t)
- 
  Emacsの対話型チュートリアルに入る

***** view-lossage (C-h l)
- 
  これまでに打鍵した最後の100文字を表示する
*** image-file
**** Functions
***** auto-image-file-mode
- (auto-image-file-mode &optional ARG)
  Toggle visiting of image files as image (Auto Image File mode).
*** indent
**** Functions
***** indent-for-tab-command
- C-i
***** indent-region (C-M-\)
- (indent-region START END &optional COLUMN)
  Indent each nonblank line in the region.
**** Variables
***** tab-stop-list
- List of tab stop positions used by "tab-to-tab-stop"
*** info
**** Functions
***** info
- (info &optional FILE_OR_NODE BUFFER)
  the documentation browser.
***** info-emacs-manual
- (info-emacs-manual)
  Display the Emacs manual in Info mode.
*** info-look
**** Functions
***** info-lookup-symbol (C-h S)
- (ifo-lookup-symbol SYMBOL &optional MODE)
  Display the definition of SYMBOL, as found in the relevant manual.
*** isearch
**** Functions
***** isearch-delete-char
- (isearch-delete-char)
  Discard last input item and move point back.
***** isearch-backward (C-r)
- (isearch-backward &optional REGEXP-P NO-RECURSIVE-EDIT)
  Do incremental search backward.
***** isearch-forward
- (isearch-forward &optiona REGEXP-P NO-RECURSIVE-EDIT)
  Do incremental search forward.
****** Memo
- C-w : カーソル後続の文字列を取り込む。繰り返すと範囲が広がる。
- M-c : case sensitive <-> insensitive
- M-e : 検索文字列をミニバッファで修正
- M-r : 正規表現による検索、取りやめ
  
***** word-search-backward
- (word-search-backward STRING &optional BOUND NOERROR COUNT)
  Search backward from point for STRING, ignoring differences in punctuation.
***** word-search-forward
- (word-search-forward STRING &optional BOUND NOERROR COUNT)
  Search forward from point for STRING, ignoring differences in punctuation.
*** jka-cmpr-hook
**** Functions
***** auto-compression-mode
- (auto-compression-mode &optional ARG)
  Toggle Auto Compression mode.
*** linum
**** Functions
***** global-linum-mode
- (global-linum-mode &optional ARG)
  Toggle Linum mode in all buffers.
***** linum-mode
- (linum-mode &optional ARG)
  Toggle display of line numbers in the left margin.
*** menu-bar
**** Functions
***** menu-bar-mode
- (menu-bar-mode &optional ARG)
  Toggle display of a menu bar on each frame (Menu Bar mode)
*** minibuffer
**** Functions
***** completion-at-point
- (completion-at-point)
  Perform completion on the text around point.
*** newcomment
**** Functions
***** comment-region
- (comment-region BEG END &optional ARG)

*** paren
**** Variables
***** show-paren-style
- Style used when showing a matching paren.
- Value
  - parenthesis
  - expression
  - mixed
*** profiler
**** Functions
***** profiler-start
- (profiler-start MODE)
  Start/restart profilers.
  MODE can be one of "cpu", "mem" or "cpu+mem".

***** profiler-stop
***** profiler-report
***** profiler-reset
*** replace
**** Functions
***** replace-string (M-r)
- (replace-string FROM-STRING TO-STRING &optional DELIMITED STRAT END BACKWARD)
  Replace occurrences of FROM-STRING with TO-STRING.
***** replace-regexp
- (replace-regexp REGEXP TO-STRING &optional DELIMITED START END BACKWARD)
  Replace things after point matching REGEXP with TO-STRING.
*** server
**** Functions
***** (server-running-p &optional NAME)
      Test whether server NAME is running.
*** simple
**** Functions
***** beginning-of-buffer (M-<, C-home)
- (beginning-of-buffer &optional ARG)
  Move point to the beginning of the buffer.
  With numeric arg N, put point N/10 of the way from the beginning.
- マーク位置を変更してしまうため、プログラムでは利用しない。代わりに(goto-char (point-min))などを使う。
***** column-number-mode
- (column-number-mode &optional ARG)
  Toggle column number display in the mode line.
***** delete-backward-char
- (delete-backward-char N &optional KILLFLAG)
  Delete the previous N characters (following if N is negative).
***** end-of-buffer (M->, C-end)
- (end-of-buffer &optional ARG)
  Move point to the end of the buffer.
  With numeric arg N, put point N/10 of the way from the end.
***** eval-expression (M-:)
- (eval-expression EXP &optional INSERT-VALUE)
  Evaluate EXP and print value in the echo area.
***** keyboard-quit (C-g)
- (keyboard-quit)
  Signal a "quit" condition.

***** kill-line
- (kill-line &optional ARG)
  Kill the rest of the current line; if no nonblanks there, kill thru newline.
***** kill-region
- (kill-region BEG END &optional REGION)
  Kill ("cut") text between point and mark.
- Kill-ringを変更するため、Emacs-Lisp中からは利用しない。
***** move-end-of-line
- (move-end-of-line ARG)
  Move point to end of current line as displayed.
***** next-line (C-n)
- (next-line &optoinal ARG TRY-VSCROLL)
  Move cursor vertically down ARG lines.
- goal-columnの制御などが含まれているため、プログラムとして使用する場合はforward-lineを用いる。
***** previous-line (C-p)
- (previous-line &optional ARG TRY-VSCROLL)
  Move cursor vertically up ARG lines.
***** repeat-complex-command (C-x M-:)
- (repeat-complex-command ARG)
  Edit and re-evaluate last complex command, or ARGth from last.
**** Variables
***** column-number-mode
- Non-nil if Column-Number mode is enabled.
***** eval-expression-print-length
- Value for "print-length" while printing value in "eval-expression".
  
***** next-line-add-enwlines
- If non-nil, "next-line" inserts newline to avoid "end of buffer" error.
*** startup
**** Functions
***** normal-top-levevl-add-subdirs-to-load-path
- (normal-top-levevl-add-subdirs-to-load-path)
  Add all subdirectories of "default-directory" to "load-path"
**** Variables
***** after-init-hook
- Normal hook run after initializing the Emacs session.
  It is run after Emacs loads the init file, "default" library,
  the abbrevs file, and additional Lisp packages (if any),
  and setting the value of "after-init-time".
*** subr
**** Alias
***** int-to-string
- (int-to-string NUMBER)
  alias for "number-to-string"
***** not
- alias for "null"
  (not OBJECT)
***** store-match-data
- 
  alias for "set-match-data"
***** string=
- (string= S1 S2)
  alias for "string-equal"
  Return t if two strings have identical contents.

***** string<
- 
  alias for "string-lessp"
***** string-to-int
- (string-to-int STRING &optional BASE)
  alias for "string-to-number"
***** (obsolete)
****** eval-current-buffer
- alias for "eval-buffer"
  obsolete since 22.1. use "eval-buffer".
**** Functions
***** add-hook
- (add-hook HOOK FUNCTION &optional APPEND LOCAL)
  Add to the value of HOOK the function FUNCTION.
  FUNCTION is not added if already present.

***** add-to-list
- (add-to-list LIST-VAR ELEMENT &optional APPEND COMPARE-FN)
  This function has a compiler macro.
  Add ELEMENT to the value of LIST-VAR if it isn't there yet.
***** error
- (error STRING &rest ARGS)
  Signal a error, making error message by passing all args to "format".
  
***** eval-after-load
- (eval-after-load FILE FORM)
  Arrange that if FILE is loaded, FORM will be run immediately afterwards.
  If FILE is already loaded, evaluate FORM right now.
***** kbd
- (kdb KEYS)
  Convert KEYS to the internal Emacs key representation.
***** keyboard-translate
- (keyboard-translate FROM TO)
  Translate character FROM to TO on the current terminal.
***** local-set-key
- (local-set-key KEY COMMAND)
  Give KEY a local binding as COMMAND.
  
  呼び出した際に使われているキーマップに対してキーを設定する。
***** locate-library
- (locate-library LIBRARY &optional NOSUFFIX PATH INTERACTIVE-CALL)
  Show the precise file name of Emacs library LIBRARY.
***** global-set-key
- (global-set-key KEY COMMAND)
  Give KEY a global binding as COMMAND.
  
  same as (define-key global-map KEY COMMAND).
***** match-string
- (match-string NUM &optional STRING)
  Return string of text matched by last search.
  
***** match-string-no-properties
- (match-string-no-properties NUM &optional STRING)
  Return string of text matched by last search, without text properties.
***** save-match-data
- (save-match-data &rest BODY)
  Execute the BODY forms, restoring the global value of the match data.
  The value returned is the value of the last form in BODY.
- match-dataの内容を保存して"BODY"を評価した後内容を復帰する。
***** set-match-data
- (set-match-data LIST &optional RESEAT)
  Set internal data on last search match from elements of LIST.
***** sit-for
- (sit-for SECONDS &optional NODISP)
  Redisplay, then wait for SECONDS seconds. Stop when input is available.
***** string-equal
- (string-equal S1 S2)
  Return t if two strings have identical contents.
***** string-lessp
- (string-lessp S1 S2)
  Return t if first arg string is less than second in lexicographic order.
***** y-or-n-p
- (y-or-n-p PROMPT)
  Ask user a "y or n" question. Return t if answer is "y".
  PROMPT is the string to display to ask the question.
**** Macros
***** dolist
- (dolist (VAR LIST [RESULT]) BODY...)
  Evaluate BODY with VAR bound to each car from LIST, in turn.
  Then evaluate RESULT to get return value, default nil.
***** dotimes
- (dotimes (VAR COUNT [RESULT]) BODY...)
  Loop a certain number of times.
***** lambda
- (lambda ARGS [DOCSTRING] [INTERACTIVE] BODY)
  Return a lambda expression.

***** push
- (push NEWELT PLACE)
  Add NEWELT to the list stored in the generalized variable PLACE.
***** unless
- (unless COND BODY...)
  If COND yields nil, do BODY, else return nil.
***** when
- (when COND BODY...)
  If COND yields non-nil, do BODY, else return nil.
**** Variables
***** user-emacs-directory
- Directory beneath which additional per-user Emacs-specific files are placed.
*** time
**** Functions
***** dispaly-time
- (display-time)
  Enable display of time, load level, and mail flag in mode lines.
*** tutorial
**** Functions
***** help-with-tutorial
- (help-with-tutorial &optional ARG DONT-ASK-FOR-REVERT)
- Command : (C-h t)
  Select the Emacs learn-by-doing tutorial.
*** window
**** Functions
***** display-buffer
- (display-buffer BUFFER-OR-NAME &optional ACTION FRAME)
  Display BUFFER-OR-NAME in some window, without selecting it.
***** pop-to-buffer
- (pop-to-buffer BUFFER &optional ACTION NORECORD)
  Select buffer BUFFER in some window, preferably a different one.
***** switch-to-buffer
- (switch-to-buffer BUFFER-OR-NAME &optional NORECORD FORCE-SAME-WINDOW)
  Display buffer BUFFER-OR-NAME in teh selected window.
***** switch-to-next-buffer
- (switch-to-next-buffer &optoinal WINDOW)
  In WINDOW switch to next buffer.
***** switch-to-prev-buffer
- (switch-to-prev-buffer &optional WINDOW BURY-OR-KILL)
  WINDOW switch to previous buffer.
** Other Packages
*** auto-complete-config
**** Functions
***** auto-complete-config
- (ac-config-default)
*** auto-save-buffers
- http://0xcc.net/misc/auto-save/

*** bind-key
- [[http://emacs.rubikitch.com/bind-key/][bind-key.el : define-keyを直接書くのは時代遅れ！Emacsの重鎮が行っているスタイリッシュキー割り当て管理術！ - るびきち「新生日刊Emacs」]]
**** Macros
***** bind-key
- (bind-key KEY-NAME COMMAND &optional KEYMAP PREDICATE)
  Bind KEY-NAME to COMMAND in KEYMAP ("global-map" if not passed).
***** bind-key*
- (bind-key* KEY-NAME COMMAND &optional PREDICATE)
  Similar to "bind-key", but overrides any mode-specific bindings.

*** cl-lib
- GNU Emacs Common Lisp Emulation
**** About
- 
  The CL package adds a number of Common Lisp functions and control structures to Emacs Lisp.
  While not a 100% complete implementation of Common Lisp, it ads enough functionality to make Emacs Lisp programming significantly more convenient.
  
**** Link
- [[http://www.gnu.org/software/emacs/manual/html_mono/cl.html][GNU Emacs Common Lisp Emulation]]
*** el-get
**** Functions
**** Link
- [[https://github.com/dimitri/el-get][dimitri/el-get - github]]a
- [[http://tarao.hatenablog.com/entry/20150221/1424518030][Caskはもう古い、これからはEl-Get - いまどきのEmacsパッケージ管理 - 貳佰伍拾陸夜日記]]
*** el-get-build
**** Variables
***** el-get-install-info
- install-info path
*** etags
- Etags
**** Command
***** find-tags
- M-. / <menu-bar><edit><goto><find-tag>
*** esup
*** evil
*** gtags
**** Functions
***** gtags-find-tag
- (gtags-find-tag TAGNAME &optional OTHER-WIN)
  Input tag name and move to the definition.
***** gtags-find-rtag
- (gtags-find-rtag TAGNAME)
  Input tag name and move to hte referenced point.
***** gtags-find-symbol
- (gtags-find-symbol TAGNAME)
  Input symbol and move to the locations.
***** gtags-pop-stack
- (gtags-pop-stack)
  Move to previous point on the stack.
**** Variables
***** gtags-path-style
- Controls the style of path in [GTAGS SELECT MODE].
- Values :
  - root (default)
  - relative
- Memo
  Windowsでは、root->relativeを設定することで動作するようになった。
*** initchart
- https://github.com/yuttie/initchart
- provides macros and functions to measure and visualize a init process of Emacs.
**** Functions
***** initchart-record-execution-time-of
***** initchart-visualize-init-sequence
- (initchart-visualize-init-sequence &optional FP)
  指定したfilepathに計測結果をsvg形式でグラフ表示する。
*** init-loader
*** noflet
- https://github.com/nicferrier/emacs-noflet
- Local function decoration
  ローカル関数を定義するマクロ。
**** About
- 
  By default, valid names of configuration files stat with two digits.
- platform specific configration file has prefix corresponds to the platform.
  these are loaded after non-platform specific configuration files.
  |-----------+-------------------+---------------+-----------------------------|
  | Platform  | Subplatform       | Prefix        | Exapmle                     |
  |-----------+-------------------+---------------+-----------------------------|
  | Windows   |                   | windows-      | windows-fonts.el            |
  |           | Meadow            | meadow-       | meadow-commands.el          |
  | Mac OS X  | Carbon Emacs      | carbon-emacs- | carbon-emacs-applescript.el |
  |           | Cocoa Emacs       | cocoa-emacs-  | cocoa-emacs-plist.el        |
  | GNU/Linux |                   | linux-        | linux-commands.el           |
  | All       | Non-window system | nw-           | nw-key.el                   |
  |-----------+-------------------+---------------+-----------------------------|

**** Functions
***** init-loader-load
***** init-loader-show-log
- (init-loader-show-log)
  Show init-loader log buffer.
**** Link
- [[https://github.com/emacs-jp/init-loader][emacs-jp/init-loader - github]]
*** magit
**** Link
- [[https://github.com/magit/magit][magit/magit - github]]
- [[https://magit.vc/manual/][magit - User Manuals]]
  
*** use-package

**** Link
- [[http://emacs.rubikitch.com/use-package-2/][use-package.el : Emacsの世界的権威が行っている最先端ラクラクinit.el整理術 - るびきち「新生日刊Emacs」]]
- [[http://qiita.com/kai2nenobu/items/5dfae3767514584f5220][use-packageで可読性の高いinit.elを書く - Qiita]]
** Memo
*** パッケージ管理
**** package.el
- デフォルト
**** Cask
**** El-Get
- [[http://tarao.hatenablog.com/entry/20150221/1424518030][Caskはもう古い、これからはEl-Get - いまどきのEmacsパッケージ管理 - 貳佰伍拾陸夜日記]]
** Link
- [[https://github.com/emacs-tw/awesome-emacs][Awesome Emacs - emacs-tw/awesome-emacs - github]]
- [[http://krazedkrish.com/blog/2015/12/27/awesome-emacs-plugins/][Awesome Emacs plugins you might not know - krazedkrish]]
- [[http://qiita.com/hottestseason/items/1e8a46ad1ebcf7d0e11c][Emacsパッケージ特集 - Qiita]]
