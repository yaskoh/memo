* Java

** Language
*** 字句構造
**** コメント
- 
  3種類のコメントがある。
- /* comment */
- // line-comment
- /** documentation */
  自動生成文書を作成する。
**** 識別子
**** キーワード
- 
  abstract boolean break byte case catch char class const continue
  default do double else extends final finally float for goto
  if implements import instanceof int interface long native new package
  private protected public return short static super switch synchronized this
  throw throws transient try void volatile while

**** リテラル
***** 整数リテラル
***** 浮動小数点リテラル
***** 論理値リテラル
***** 文字リテラル
***** 文字列リテラル
***** 空リテラル
- 

**** 分離子
- 
  以下の9個のASCII文字をJava分離子(separators)とする。
  ( ) { } [ ] ; ,

**** 演算子
- 
  以下の37個のトークンをJava演算子(operators)とする。
  = > < ! ~ ? : == <= >= != && || ++ --
  + - * / & | ^ % << >> >>>
  += -= *= /= &= |= ^= %= <<= >>= >>>=

*** 型、値及び変数

*** 変換及び昇格

*** 名前

*** パッケージ

*** クラス

*** インターフェース

*** 配列

*** 例外

*** 実行

*** ブロック及び文

*** 式

*** 

** Java Platform
- 

*** エディション
**** Java SE
- 
  Java Platform, Standard Edition。
  汎用的な用途に使われる。

**** Java EE
- 
  Java Platform, Enterprise Edition。
  Java SEに加え、多層クライアントサーバの大規模システムを開発するための、
  さまざまなAPIが追加されている。

**** Java ME
- 
  Java Platform, Micro Edition。
  組み込みシステムなどを用途として想定したエディション。
  機器の種類に応じ、ライブラリのいくつかの異なるセット（プロファイル）を規定している。

*** 配布形態

**** Java Runtime Environment(JRE)
- 
  Javaを実行するために必要なソフトウェア。
  Java仮想マシン(JVM)とAPIから成る。
  仮想マシンとAPIは互いに互換性がなければならず、共にバンドルされている。
  プログラムを実行するだけであれば、JDKは必要なくJREのみでよい。

***** Java Virtual Machine(JVM)
- 
  Javaバイトコードとして定義された命令セットを実行するスタック型の仮想マシン。

***** Application Programming Interface(API)
- 
  関数群。クラスライブラリ。

**** Java Development Kit(JDK)
- 
  ソフトウェア開発キット。
  Javaプログラムの開発を支援する基本的なソフトウェア。
  各プラットフォームの全ての実装。
  Javaコンパイラ、javadoc、デバッガなどを含む多くの開発ツールを含む。
  Private Runtimeと呼ばれる完全なJREも含む。

***** 内容
- appletviewer
- apt
- extcheck
- idlj
- java
- javac
- javadoc
- jar
- javah
- javap
- javaws
- JConsole
- jdb
- jhat
- jinfo
- jmap
- jps
- jrunscript
- jstack
- jstat
- jstand
- keytool
- pack200
- policytool
- VisualVM
- wsimport
- xjc

([[http://ja.wikipedia.org/wiki/Java_Development_Kit][Java DevelopmentKit]])


** memo

*** リソース付きtry
- 
  try(AutoCloseable Class; ...){
  }
  括弧の中身のリソースについて、自動でclose()が呼ばれる。

*** 拡張for分
- 
  for (データ型 変数名: コレクション){
  }
  foreach。コレクションを順に取り出す。

*** インスタンス初期化子
- 
  {実装}
  何も修飾せず実装を書くと、コンストラクタが呼び出される前にメソッドとして呼び出される。
  匿名クラスなどで使い道がある。

*** 匿名クラス
- 
  new スーパークラス名(コンストラクタ引数) { サブクラス実装 }
  スーパークラスのサブクラスとして、名前のないクラスを作成できる。
  作成時にインスタンス化もして、そのまま使い捨てる。


