* CSS

** memo

*** コメントアウト
- 
  /* ... */ でコメントアウトできる。

*** 要素の指定

**** 全称セレクタ
- 
  アスタリスク(*)を記述してすべての要素を対象にスタイルを適用する。

**** タイプセレクタ
- 
  要素名を使った指定は、要素をそのまま記載すればよい。
  ex) p { color: red; }

**** クラスセレクタ
- 
  クラス名はピリオド(.)に続けて記述する。
  ex) .example { color: red; }
  要素名に続けて指定する方法もある。

**** IDセレクタ
- 
  IDを使った指定では、ハッシュ(#)に続けて記述する。
  ex) #example { color: red; }
  要素名に続けて指定する方法もある。

**** 属性セレクタ
- 
  要素名に続けて[]を記述して、属性名や属性値を指定する。
  
  |-------------------+----------------------------------------------------------------------------------|
  | 属性セレクタ      | 説明                                                                             |
  |-------------------+----------------------------------------------------------------------------------|
  | [属性名]          | 属性名が一致する要素に適用される                                                 |
  | [属性名="属性値"  | 属性名と属性値が一致する要素に適用される                                         |
  | [属性名~="属性値" | 属性名と属性値が一致する要素に適用される(スペースで区切られた複数の属性値に対応) |
  | [属性名l="属性値" | 属性名と属性値が一致する要素に適用される(ハイフンで区切られた属性値に対応)       |
  |-------------------+----------------------------------------------------------------------------------|


**** その他セレクタ
- 複数セレクタ
  セレクタをカンマで区切ると、複数のセレクタに同じスタイルを適用できる。
  ex) h2, p { color: blue; }
  
- 子孫セレクタ
  あるセレクタ配下の全ての子孫セレクタを対象にスタイルを適用する。
  ex) p strong { background-color: #3399FF; }

- 子セレクタ
  あるセレクタ直下の子セレクタを対象にスタイルを適用する。
  ex) p > strong { background-color: #3399FF; }

- 隣接セレクタ
  隣接する要素を対象にスタイルを適用する。
  ex) h2 + p { color: #0000FF; }

**** 擬似クラス

**** 擬似要素


** SASS
- 
  SCSSというフォーマットに対応。
  ネスト、変数の使用、ミックスインに対応。

*** ネスト
- 共通のパターンがある場合にネスト可能。(子孫セレクタのみ？)
  ex)
    .center {
      text-align: center;
    }
    .center h1 {
      margin-bottom: 10px;
    }
    ⇒
    .center {
      text-align: center;
      h1 {
        margin-bottom: 10px;
      }
    }

- 親属性を参照する必要がある場合は&を使う。
  ex)
    #logo {
      float: left;
      ...
    }
    #logo:hover {
      color: #fff;
      ...
    }
    ⇒
    #logo {
      float: left;
      ...
      &:hover {
        color: #fff;
        ...
      }
    }

*** 変数 
- 
  ドルマーク($)を使って変数を定義できる。
  （ちなみにLESSでは@マークを使っている。）

*** Link
- [[http://sass-lang.com/documentation/file.SASS_REFERENCE.html][SASS_REFERENCE]]
